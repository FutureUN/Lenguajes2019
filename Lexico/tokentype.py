# -*- coding: utf-8 -*-
"""tokenType.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WULt_76aGCmVhptwJA_ztJ_6rTJXzDj8
"""

TokenType = {
    # Keywords alphabetical order
    'af': 'af', 
    'body': 'body',
    'cap' : 'cap', 
    'class': 'class',
    'const':'const', 
    'create':'create', 
    'do': 'do',
    'end': 'end',
    'fi': 'fi',
    'final': 'final', 
    'fa':'fa',
    'getarg': 'getarg',
    'global': 'global',
    'if': 'if',
    'import': 'import',
    'in' : 'in',
    'int': 'int', 
    'ni':'ni',
    'op': 'op',
    'do': 'od',
    'param': 'param', 
    'proto': 'proto',
    'proc': 'proc',
    'procedure': 'procedure',
    'process':'process',
    'real' : 'real', 
    'recdata': 'recdata',
    'receive':'receive',
    'returns': 'returns',
    'resource': 'resource',
    'signat': 'signat',
    'sem':'sem',
    'send':'send',
    'stop' : 'stop',
    'to' :'to', 
    'true': 'true', 
    'var': 'var',
    'while': 'while',
    'write': 'write', 
    'writes': 'writes', 
    
    
    # We must specify a FSA for all these 
    
    # Assignment operators
    ':=': 'tk_assig',
    '.': 'dot',
    ':': 'tk_dots', 
    
    # Arithmetic operators
    '+':'add',
    '/': 'tok_div', 
    'mod': 'tok_mod',
    '*': 'tk_multi',
    '-': 'substract',   
    
    # Boolean operators
    
    
    # Delimiters
    '[': 'tk_bracket_l', 
    ']': 'tk_bracket_r',
    ',':'tk_coma',  
    '(': 'tk_parent_l', 
    ')': 'tk_parent_r', 
    ';':'tk_semicolon', 
    
    '->': 'tk_execute',
    '[]': 'tk_', # Divide? apart? 
   
    
    #Identifier and Literals
    
    'identifier': 'tk_identifier',
    'string': 'tk_string',
    'num': 'tk_num',  # shall we discriminate with Int and Float?
    
    
    # Comparison operators
    '=': 'tk_equal',
    '!=': 'tk_not_equal', 
    '>': 'tk_greater',
    '>=': 'tk_greater_equal', 
    '<' : 'tk_less', 
    '<=': 'tk_less_equal', 
    
    # Special token types
   
    
 };

def lexer(string): 
  print(string)
  
if __name__ == "__main__": 
  lexer("hola")